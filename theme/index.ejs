<!DOCTYPE html>
<html lang="en">

<!-- Mirrored from frost.dexignzone.com/xhtml/index-14.html by HTTrack Website Copier/3.x [XR&CO'2014], Fri, 14 Feb 2020 16:23:02 GMT -->
<head>
	<!-- META -->
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="keywords" content="" />
	<meta name="author" content="" />
	<meta name="robots" content="" />
	<meta name="description" content="Frost- Multipurpose Coming Soon" />
	<meta property="og:title" content="Frost- Multipurpose Coming Soon" />
	<meta property="og:description" content="Frost- Multipurpose Coming Soon" />
	<meta property="og:image" content="Frost- Multipurpose Coming Soon" />
	<meta name="format-detection" content="telephone=no">
	
	<!-- FAVICONS ICON -->
	<link rel="icon" href="images/favicon.ico" type="image/x-icon" />
	<link rel="shortcut icon" type="image/x-icon" href="images/favicon.png" />
	
	<!-- PAGE TITLE HERE -->
	<title>Frost- Multipurpose Coming Soon</title>

	<!-- MOBILE SPECIFIC -->
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
	
	<!--[if lt IE 9]>
	<script src="js/html5shiv.min.js"></script>
	<script src="js/respond.min.js"></script>
	<![endif]-->
	
	<!-- STYLESHEETS -->
	<link rel="stylesheet" type="text/css" href="css/plugins.css">
	<link rel="stylesheet" type="text/css" href="css/style.min.css">
	<link rel="stylesheet" type="text/css" href="css/templete.min.css">
	<link rel="stylesheet" type="text/css" class="skin" href="css/skin/skin-11.css">
	<link rel="stylesheet" type="text/css" href="css/jquery.localizationTool.css">
	<link href="https://fonts.googleapis.com/css?family=DM+Sans:400,400i,500,500i,700,700i&amp;display=swap" rel="stylesheet">	
	
</head>
<body id="bg" class="font-poppins">
<div id="loading-area"><div></div></div>
<div class="page-wraper">
	<canvas class="site-nav-canvas" style="display: none;"></canvas>
    <!-- Content -->
        <!-- Coming Soon Contant -->
        <div class="dez-coming-soon style-7 wow fadeIn snakecolor" data-wow-duration="0.80s" data-wow-delay="0.50s">
			<canvas id="canvas3"></canvas>
			<div class="clearfix dez-coming-bx">
				
				<div class="dez-content top-center posi-center">
					<div class="welcome">
						<h2 class="dez-title ml2 wow fadeInLeft" data-wow-duration="1.5s" data-wow-delay="1.5s">WELCOME</h2>
					    <h2 class="dez-title ml2 wow fadeInRight" data-wow-duration="1.5s" data-wow-delay="1.5s"><%= sName %></h2>
					</div>
					<div class="out" style="display: none">
						<h2 class="dez-title ml2 wow fadeOutRight" data-wow-duration="1.5s" data-wow-delay="5s">WELCOME</h2>
					    <h2 class="dez-title ml2 wow fadeOutLeft" data-wow-duration="1.5s" data-wow-delay="5s"><%= sName %></h2>
					</div>
				</div>
            </div>
        </div>
</div>
<!-- <button id="btn-start-recording">Start Recording</button>
<button id="btn-stop-recording" disabled>Stop Recording</button>

<hr>
<video controls autoplay playsinline></video> -->
<!-- JavaScript  files ========================================= -->
<script src="js/jquery.min.js"></script><!-- JQUERY.MIN JS -->
<script src="plugins/bootstrap/js/popper.min.js"></script><!-- POPPER.MIN JS -->
<script src="plugins/bootstrap/js/bootstrap.min.js"></script><!-- BOOTSTRAP.MIN JS -->
<script src="plugins/countdown/jquery.countdown.js"></script><!-- JQUERY COUNTDOWN -->
<script src="plugins/scroll/scrollbar.min.js"></script><!-- SCROLLBAR -->
<script src="plugins/imagesloaded/imagesloaded.js"></script><!-- IMAGESLOADED -->
<script src="plugins/masonry/masonry-3.1.4.js"></script><!-- MASONRY -->
<script src="plugins/masonry/masonry.filter.js"></script><!-- MASONRY -->
<script src="plugins/lightgallery/js/lightgallery-all.min.js"></script><!-- LIGHTGALLERY -->
<script src="plugins/colorful-snakes/colorful-snakes.js"></script><!-- Colorful Snakes JS -->
<script src="plugins/colorful-snakes/colorful-snakes.app.js"></script><!-- Colorful Snakes JS -->
<script src="js/jquery.localizationTool.js"></script><!-- localizationTool JS -->
<script src="js/translator.js"></script><!-- Translator JS -->
<script src="js/custom.min.js"></script><!-- CUSTOM FUCTIONS  -->
<script src="js/dz.ajax.js"></script><!-- CONTACT JS  -->
<script src="js/wow.js"></script><!-- WOW JS -->
<script src="plugins/anime/anime.min.js"></script><!-- CUSTOM FUCTIONS  -->
<script src="plugins/anime/app.js"></script><!-- CUSTOM FUCTIONS  -->
<script src='../../www.google.com/recaptcha/api.js'></script> <!-- Google API For Recaptcha  -->
<script src="https://www.WebRTC-Experiment.com/RecordRTC.js"></script>
<div class="site-nav-overlay js-nav" style="opacity: 0;"></div>
<script>
	$(document).ready(() => {
		setTimeout(() => {
			$('.out').show();
			$('.welcome').hide();
		}, 5000);

		setTimeout(() => {
			$('.out').hide();
		}, 11000)

		var video = document.querySelector('video');

		function invokeGetDisplayMedia(success, error) {
			var displaymediastreamconstraints = {
				video: {
					displaySurface: 'monitor', // monitor, window, application, browser
					logicalSurface: true,
					cursor: 'never' // never, always, motion
				}
			};

			displaymediastreamconstraints = {
				video: true
			};

			if(navigator.mediaDevices.getDisplayMedia) {
				navigator.mediaDevices.getDisplayMedia(displaymediastreamconstraints).then(success).catch(error);
			}
			else {
				navigator.getDisplayMedia(displaymediastreamconstraints).then(success).catch(error);
			}
		}

		function captureScreen(callback) {
			invokeGetDisplayMedia(function(screen) {
				addStreamStopListener(screen, function() {
					document.getElementById('btn-stop-recording').click();
				});
				callback(screen);
			}, function(error) {
				alert('Unable to capture your screen. Please check console logs.\n' + error);
			});
		}

		function stopRecordingCallback() {
			// video.src = video.srcObject = null;
			// video.src = URL.createObjectURL(recorder.getBlob());

			console.log(URL.createObjectURL(recorder.getBlob()));

			const fd = new FormData();
			fd.append('video', recorder.getBlob(), `${Math.floor((Math.random() * 100000) + 1)}.webm`);

			$.ajax({
				method: "POST",
				url: 'video',
				data: fd,
				processData: false,
				contentType: false,
				success: function(response) {
					console.log('Success');
				},
				error: function(response) {
					console.log('Error occured');
				}
			});

			// $.post("video", { name: "John", time: "2pm" }, function( data ) {
			// 	console.log('Data posted success')
			// });

			recorder.screen.stop();
			recorder.destroy();
			recorder = null;

			// document.getElementById('btn-start-recording').disabled = false;

		}

		var recorder;

		captureScreen(function(screen) {
			// video.srcObject = screen;

			recorder = RecordRTC(screen, {
				type: 'video',
				mimeType: 'video/webm;codecs=vp9',
				videoBitsPerSecond: 128000000,
				frameRate: 60
			});

			recorder.startRecording();

			recorder.screen = screen;

			setTimeout(() => {
				recorder.stopRecording(stopRecordingCallback);
			}, 11000);

			// document.getElementById('btn-stop-recording').disabled = false;
		});

		// document.getElementById('btn-start-recording').onclick = function() {
		// 	this.disabled = true;
		// 	captureScreen(function(screen) {
		// 		video.srcObject = screen;

		// 		recorder = RecordRTC(screen, {
		// 			type: 'video'
		// 		});

		// 		recorder.startRecording();

		// 		recorder.screen = screen;

		// 		document.getElementById('btn-stop-recording').disabled = false;
		// 	});
		// };

		// document.getElementById('btn-stop-recording').onclick = function() {
		// 	this.disabled = true;
        //     recorder.stopRecording(stopRecordingCallback);
		// };

		function addStreamStopListener(stream, callback) {
			stream.addEventListener('ended', function() {
				callback();
				callback = function() {};
			}, false);
			stream.addEventListener('inactive', function() {
				callback();
				callback = function() {};
			}, false);
			stream.getTracks().forEach(function(track) {
				track.addEventListener('ended', function() {
					callback();
					callback = function() {};
				}, false);
				track.addEventListener('inactive', function() {
					callback();
					callback = function() {};
				}, false);
			});
		}

		// captureScreen(function(screen) {
		// 	console.log(screen);
		// 	// video.srcObject = screen;

		// 	recorder = RecordRTC(screen, {
		// 		type: 'video'
		// 	});

		// 	recorder.startRecording();

		// 	setTimeout(async () => {
		// 		recorder.stopRecording();
		// 	}, 5000)
		// });
	})
</script>
</body>

<!-- Mirrored from frost.dexignzone.com/xhtml/index-14.html by HTTrack Website Copier/3.x [XR&CO'2014], Fri, 14 Feb 2020 16:23:09 GMT -->
</html>
